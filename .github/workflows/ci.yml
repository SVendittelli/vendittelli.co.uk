name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  main:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.9
    with:
      number-of-agents: 3
      init-commands: |
        yarn nx-cloud start-ci-run --stop-agents-after="build" --agent-count=3
      parallel-commands: |
        yarn nx-cloud record -- yarn nx workspace-lint
        yarn nx-cloud record -- yarn nx format:check
      parallel-commands-on-agents: |
        yarn nx affected --target=lint --parallel=3
        yarn nx affected --target=test --parallel=3 --ci --code-coverage
        yarn nx affected --target=build --parallel=3
      artifacts-name: dist
      artifacts-path: dist

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.9
    with:
      number-of-agents: 3

  deployment:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: main
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://vendittelli.co.uk
    concurrency: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - name: Print node/npm/yarn versions
        id: versions
        run: |
          node_ver=$( node --version )
          yarn_ver=$( yarn --version || true )

          echo "Node: ${node_ver:1}"
          echo "NPM: $( npm --version )"
          if [[ $yarn_ver != '' ]]; then echo "Yarn: $yarn_ver"; fi
          echo "node_version=${node_ver:1}" >> $GITHUB_OUTPUT

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Use the yarn cache if available
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Configure AWS credentials for deployments
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: yarn nx affected --target=deploy
